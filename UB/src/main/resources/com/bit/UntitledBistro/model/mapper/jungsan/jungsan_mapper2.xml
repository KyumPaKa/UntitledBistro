<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DAO">
	<select id="getjungsan_inputList" parameterType="map" resultType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
		SELECT 
			* 
		FROM 
			JUNGSAN_INPUT 
		<where>
		<if test="postdatepicker == null">
			JUNGSAN_INPUT_DATE BETWEEN 
   									  (
   									  SELECT 
											DISTINCT DATE_FORMAT(CURDATE(), '%c')
									  FROM 
									  		JUNGSAN_INPUT
									  ) 
								AND 
   									  (
   									  SELECT 
   									  		DISTINCT DATE_FORMAT(LAST_DAY( NOW() ),'%Y/%c/%d')
   									  FROM 
   									  		JUNGSAN_INPUT
   									  )
   		</if>
		<if test="postdatepicker != null">
								AND
									  JUNGSAN_INPUT_DATE LIKE #{postdatepicker}
		</if>
		</where>
	</select>
	
	<select id="to_date" resultType="string">
		SELECT 

		CASE DAYOFWEEK(NOW())
		
		WHEN '1' THEN '일요일'
		
		WHEN '2' THEN '월요일'
		
		WHEN '3' THEN '화요일'
		
		WHEN '4' THEN '수요일'
		
		WHEN '5' THEN '목요일'
		
		WHEN '6' THEN '금요일'
		
		WHEN '7' THEN '토요일'
		
		END AS week
	</select>
	
	<select id="postdatepicker" resultType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
		select * from Jungsan_Input where JUNGSAN_INPUT_DATE 
	</select>
	
	<select id="DATE_FORMAT" resultType="string">
		SELECT DISTINCT DATE_FORMAT(NOW(), '%d') FROM JUNGSAN_INPUT
	</select>
	
	<select id="MonthList" resultType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
		SELECT * FROM MONTH_INPUT
	</select>
	
	<insert id="insert_daily">
		insert into Jungsan_Input(
		jungsan_input_cash,jungsan_input_card,
		jungsan_input_grade,jungsan_input_worktime,
		jungsan_input_expenditure,jungsan_input_point,
		jungsan_input_refund,jungsan_input_reason,jungsan_input_date) 
		VALUES(
		#{jungsan_input_cash, jdbcType=NUMERIC},#{jungsan_input_card, jdbcType=NUMERIC},
		#{jungsan_input_grade, jdbcType=VARCHAR},#{jungsan_input_worktime, jdbcType=NUMERIC},
		#{jungsan_input_expenditure, jdbcType=NUMERIC},#{jungsan_input_point, jdbcType=NUMERIC},
		#{jungsan_input_refund, jdbcType=NUMERIC},#{jungsan_input_reason, jdbcType=VARCHAR}
		,NOW()
		)
	</insert>
	
	<update id="update_Monthly">
	update TT set n =1 where n = 1
	<!-- UPDATE 
		MONTH_INPUT 
	SET
		MONTH_CASH = (
					 SELECT IFNULL(SUM(JUNGSAN_INPUT_CASH),0) FROM JUNGSAN_INPUT 
					 WHERE JUNGSAN_INPUT_DATE BETWEEN 
					 (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
					 AND
					 (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
					 )
	
		,MONTH_CARD = (
					  SELECT IFNULL(SUM(JUNGSAN_INPUT_CARD),0) FROM JUNGSAN_INPUT 
					  WHERE JUNGSAN_INPUT_DATE BETWEEN 
					  (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
					  AND
					  (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
					  )
					  
		,MONTH_WORKTIME = (
						  SELECT IFNULL(SUM(JUNGSAN_INPUT_WORKTIME),0)FROM JUNGSAN_INPUT 
						  WHERE JUNGSAN_INPUT_DATE BETWEEN 
						  (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
					 	  AND
					  	  (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
						  )
						  
		,MONTH_EXPENDITURE = (
							 SELECT IFNULL(SUM(JUNGSAN_INPUT_EXPENDITURE),0) FROM JUNGSAN_INPUT 
							 WHERE JUNGSAN_INPUT_DATE BETWEEN 
							 (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
					 	     AND
					  	     (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
						     )
	
		,MONTH_POINT = (
						SELECT IFNULL(SUM(JUNGSAN_INPUT_POINT),0) FROM JUNGSAN_INPUT 
						WHERE JUNGSAN_INPUT_DATE BETWEEN 
						(SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
				 	     AND
				  	     (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
					     )
	
		,MONTH_REFUND = (
						SELECT IFNULL(SUM(JUNGSAN_INPUT_REFUND),0) FROM JUNGSAN_INPUT 
						WHERE JUNGSAN_INPUT_DATE BETWEEN 
						(SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
				 	     AND
				  	     (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
					     )
	
		,MONTH_SUM = (
					 SELECT IFNULL(SUM(JUNGSAN_INPUT_CASH+JUNGSAN_INPUT_CARD+JUNGSAN_INPUT_POINT),0) FROM JUNGSAN_INPUT 
					 WHERE JUNGSAN_INPUT_DATE BETWEEN 
					 (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
			 	     AND
			  	     (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
				     )
	
		,MONTH_REAL_SUM = (
						  SELECT IFNULL(SUM(JUNGSAN_INPUT_CASH+JUNGSAN_INPUT_CARD+JUNGSAN_INPUT_POINT-JUNGSAN_INPUT_EXPENDITURE),0) FROM JUNGSAN_INPUT 
						  WHERE JUNGSAN_INPUT_DATE BETWEEN 
						  (SELECT DISTINCT CURDATE() FROM MONTH_INPUT MI) 
				 	      AND
				  	      (SELECT DISTINCT DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY) FROM MONTH_INPUT MI2)
					      )
	
		,MONTH_DATE = (
					  SELECT DISTINCT NOW() FROM MONTH_INPUT WHERE MONTH_DATE 
					  		BETWEEN 
			   		  				CONCAT(DATE_FORMAT(NOW(), '%Y-%c'),'-01')
			 	      		AND
			  	      				LAST_DAY(NOW())
					  )  -->    
	</update>
	
	<update id="update" parameterType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
	update Jungsan_Input set 
        jungsan_input_cash= #{jungsan_input_cash, jdbcType=NUMERIC},
        jungsan_input_card= #{jungsan_input_card, jdbcType=NUMERIC},
		jungsan_input_grade= #{jungsan_input_grade, jdbcType=VARCHAR},
		jungsan_input_worktime= #{jungsan_input_worktime, jdbcType=NUMERIC},
		jungsan_input_expenditure= #{jungsan_input_expenditure, jdbcType=NUMERIC},
		jungsan_input_point= #{jungsan_input_point, jdbcType=NUMERIC},
		jungsan_input_refund= #{jungsan_input_refund, jdbcType=NUMERIC},
		jungsan_input_reason= #{jungsan_input_reason, jdbcType=VARCHAR} 
     where 
        jungsan_input_date like DATE_FORMAT (NOW(),'%Y-%c-%d')
	</update>
	
	<select id="count_difference" resultType="int">
	SELECT COUNT(DIFFERENCE) FROM JUNGSAN_DIFFERENCE WHERE DIFFERENCE_DATE LIKE DATE_FORMAT(NOW(),'%Y-%c-%d')
	</select>
	
	<select id="to_difference" resultType="int">
	select sum(difference) from jungsan_difference
	<where>
		<if test="postdatepicker == null">
		difference_date like DATE_FORMAT(NOW(),'%Y-%c-%d')
   		</if>
		<if test="postdatepicker != null">
		difference_date like #{postdatepicker}
		</if>
		</where>
	</select>
	
	<insert id="insert_difference">
		insert into jungsan_difference values(0,0,NOW())
	</insert>
	
	<update id="update_difference" parameterType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
	update jungsan_difference set 
     difference=(select sum(((select IFNULL(sum(payment_cash+payment_card+payment_point),0) 
	 from payment where payment_state='성공' and payment_date like DATE_FORMAT(NOW(),'%Y-%c-%d'))-
     (select IFNULL(sum(JUNGSAN_INPUT_CASH+JUNGSAN_INPUT_CARD +JUNGSAN_INPUT_POINT -JUNGSAN_INPUT_REFUND),0)
     from jungsan_input where JUNGSAN_INPUT_DATE like DATE_FORMAT(NOW(),'%Y-%c-%d'))))from dual) 
     where difference_date like DATE_FORMAT(NOW(),'%Y-%c-%d')
	</update>
	
	<update id="update_difference_Month" parameterType="com.bit.UntitledBistro.model.jungsan.Jungsan_Input_DTO">
	 UPDATE 
	 	JUNGSAN_DIFFERENCE 
	 SET DIFFERENCE_MONTH = (
	 						SELECT 
	 							IFNULL(SUM(DIFFERENCE),0) 
	 						FROM 
	 							JUNGSAN_DIFFERENCE 
							WHERE 
								DIFFERENCE_DATE BETWEEN 
														CURDATE()
												AND 
   													 	DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY)
								AND DIFFERENCE_DATE LIKE DATE_FORMAT(NOW(),'%Y-%c-%d')
							)
	</update>
	
	<select id="differenceList" resultType="int">
	 SELECT 
	 		IFNULL(SUM(DIFFERENCE_MONTH),0) 
	 FROM 
			JUNGSAN_DIFFERENCE
	 WHERE 
			DIFFERENCE_DATE BETWEEN 
   									CURDATE()
						 	AND 
    								DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY)
	</select>
	
	<!-- 여기부터 -->
	<select id="Jan" resultType="int">
	SELECT 
		  IFNULL(MONTH_SUM,0) 
	FROM 
		  MONTH_INPUT 
	WHERE 
		  MONTH_DATE BETWEEN 
   							DATE_FORMAT(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-01-01'),'%Y-%c-%d') 
					 AND 
   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-01-01'))
	</select>
	
	<select id="Feb" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-02-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-02-01'))
	</select>
	
	<select id="Mar" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-03-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-03-01'))
	</select>
	
	<select id="Apr" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-04-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-04-01'))
	</select>
	
	<select id="May" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-05-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-05-01'))
	</select>
	
	<select id="Jun" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-06-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-06-01'))
	</select>
	
	<select id="Jul" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-07-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-07-01'))
	</select>
	
	<select id="Aug" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-08-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-08-01'))
	</select>
	
	<select id="Sept" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-09-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-09-01'))
	</select>
	
	<select id="Ock" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-10-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-10-01'))
	</select>
	
	<select id="Nov" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-11-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-11-01'))
	</select>
	
	<select id="Dec" resultType="int">
	 SELECT 
			IFNULL(MONTH_SUM,0) 
	 FROM 
			MONTH_INPUT 
	 WHERE 
			MONTH_DATE BETWEEN 
	   							STR_TO_DATE(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-12-01'),'%Y-%c-%d') 
						  AND 
	   							LAST_DAY(CONCAT(DATE_FORMAT(NOW(),'%Y'),'-12-01'))
	</select>
	
</mapper> 